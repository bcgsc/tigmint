#!/usr/bin/env python3
"""
Calculate the span parameter for tigmint-cut based on the sequence coverage
of a given reads file.
Usage: gunzip -c reads.fq.gz | python3 calculate-span
"""

import argparse
from read_fasta import read_fasta

def find_span(genome_size):
    """
    Calculate the recommended span value from the sequence coverage of the given reads, 
    then print to stdout.
    """
    infile = "/dev/stdin/"
    base_count = 0
    with open(infile, "rt") as reads:
        for _, seq, _, _ in read_fasta(reads):
            base_count += len(seq)
    
    sequence_coverage = base_count / genome_size
    span = int(sequence_coverage // 4)

    print(span)

def main():
    parser = argparse.ArgumentParser(description="Calculate the sequence coverage of a genome \
        sequencing read file from stdin.")
    parser.add_argument("-g", dest="genome_size", required=True, type=int,
        help="Haploid genome size (in base pairs)", metavar="genome size (bp)")
    
    arguments = parser.parse_args()
    genome_size = arguments.genome_size

    find_span(genome_size)

if __name__ == "__main__":
    main()